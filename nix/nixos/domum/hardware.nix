# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usbhid"
    "usb_storage"
    "sd_mod"
    "sr_mod"
  ];
  boot.initrd.kernelModules = [ ];

  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.kernelModules = [
    "amdgpu"
  ];
  boot.extraModulePackages = [ ];
  boot.loader = {
    systemd-boot = {
      enable = true;
    };
    efi.canTouchEfiVariables = false;
    efi.efiSysMountPoint = "/boot/EFI";
    grub = {
      enable = false;
      device = "nodev";
      useOSProber = true;
      efiSupport = true;
      efiInstallAsRemovable = true;
      # theme = "/boot/grub/themes/hyperfluent";
    };
  };

  hardware.cpu.amd.updateMicrocode = true;
  hardware.steam-hardware.enable = true;
  hardware.xpadneo.enable = true;
  hardware.enableAllFirmware = true;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/86b42cb3-f9e4-4fa5-a4d1-9d6a8699c367";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/9CB8-0830";
    fsType = "vfat";
  };

  fileSystems."/boot/EFI" = {
    device = "/dev/disk/by-uuid/2033-0504";
    fsType = "vfat";
  };

  fileSystems."/run/media/rufuslevi/BigData" = {
    device = "/dev/disk/by-uuid/595F1B4B26958B58";
    fsType = "ntfs";
  };

  fileSystems."/run/media/rufuslevi/Stockage" = {
    device = "/dev/disk/by-uuid/30FEF5EB4B701518";
    fsType = "ntfs";
  };

  swapDevices = [
    {
      device = "/swapfile";
      size = 16 * 1024;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
